{"version":3,"file":"static/js/872.c746e434.chunk.js","mappings":"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","sources":["keycloak-theme/Template.tsx","keycloak-theme/KcApp.tsx","keycloak-theme/i18n.ts"],"sourcesContent":["// Copy pasted from: https://github.com/InseeFrLab/keycloakify/blob/main/src/lib/components/shared/Template.tsx\r\n\r\n// You can replace all relative imports by cherry picking files from the keycloakify module.\r\n// For example, the following import:\r\n// import { assert } from \"./tools/assert\";\r\n// becomes:\r\nimport { clsx } from 'keycloakify/lib/tools/clsx';\r\nimport type { TemplateProps } from 'keycloakify/lib/KcProps';\r\nimport { usePrepareTemplate } from 'keycloakify/lib/Template';\r\nimport type { KcContext } from './kcContext';\r\nimport type { I18n } from './i18n';\r\n\r\nexport default function Template(props: TemplateProps<KcContext, I18n>) {\r\n  const {\r\n    displayInfo = false,\r\n    displayRequiredFields = false,\r\n    displayWide = false,\r\n    showAnotherWayIfPresent = true,\r\n    headerNode,\r\n    showUsernameNode = null,\r\n    formNode,\r\n    infoNode = null,\r\n    kcContext,\r\n    i18n,\r\n    doFetchDefaultThemeResources,\r\n    stylesCommon,\r\n    styles,\r\n    scripts,\r\n    kcHtmlClass,\r\n    kcLoginClass,\r\n    kcFormCardClass,\r\n    kcFormCardAccountClass,\r\n    kcFormHeaderClass,\r\n    kcContentWrapperClass,\r\n    kcLabelWrapperClass,\r\n    kcFormGroupClass,\r\n    kcResetFlowIcon,\r\n    kcFormSocialAccountContentClass,\r\n    kcFormSocialAccountClass,\r\n    kcSignUpClass,\r\n    kcInfoAreaWrapperClass,\r\n  } = props;\r\n\r\n  const { msg } = i18n;\r\n\r\n  const { auth, url } = kcContext;\r\n\r\n  const { isReady } = usePrepareTemplate({\r\n    doFetchDefaultThemeResources,\r\n    stylesCommon,\r\n    styles,\r\n    scripts,\r\n    url,\r\n    kcHtmlClass,\r\n  });\r\n\r\n  if (!isReady) {\r\n    return null;\r\n  }\r\n\r\n  function renderHeaderRequiredFields() {\r\n    if (!(auth !== undefined && auth.showUsername && !auth.showResetCredentials)) {\r\n      return (\r\n        displayRequiredFields ? (\r\n          <div className={clsx(kcContentWrapperClass)}>\r\n            <div className={clsx(kcLabelWrapperClass, 'subtitle')}>\r\n              <span className=\"subtitle\">\r\n                <span className=\"required\">*</span>\r\n                {msg('requiredFields')}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-md-10\">\r\n              <h1 id=\"kc-page-title\">{headerNode}</h1>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <h1 id=\"kc-page-title\">{headerNode}</h1>\r\n        )\r\n      );\r\n    }\r\n\r\n    return (\r\n      displayRequiredFields ? (\r\n        <div className={clsx(kcContentWrapperClass)}>\r\n          <div className={clsx(kcLabelWrapperClass, 'subtitle')}>\r\n            <span className=\"subtitle\">\r\n              <span className=\"required\">*</span>\r\n              {' '}\r\n              {msg('requiredFields')}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-md-10\">\r\n            {showUsernameNode}\r\n            <div className={clsx(kcFormGroupClass)}>\r\n              <div id=\"kc-username\">\r\n                <label htmlFor=\"kc-username\" id=\"kc-attempted-username\">{auth?.attemptedUsername}</label>\r\n                <a id=\"reset-login\" href={url.loginRestartFlowUrl}>\r\n                  <div className=\"kc-login-tooltip\">\r\n                    <i className={clsx(kcResetFlowIcon)} />\r\n                    <span className=\"kc-tooltip-text\">{msg('restartLoginTooltip')}</span>\r\n                  </div>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {showUsernameNode}\r\n          <div className={clsx(kcFormGroupClass)}>\r\n            <div id=\"kc-username\">\r\n              <label htmlFor=\"kc-username\" id=\"kc-attempted-username\">{auth?.attemptedUsername}</label>\r\n              <a id=\"reset-login\" href={url.loginRestartFlowUrl}>\r\n                <div className=\"kc-login-tooltip\">\r\n                  <i className={clsx(kcResetFlowIcon)} />\r\n                  <span className=\"kc-tooltip-text\">{msg('restartLoginTooltip')}</span>\r\n                </div>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={clsx(kcLoginClass)}>\r\n      <div className={clsx(kcFormCardClass, displayWide && kcFormCardAccountClass)}>\r\n        <header className={clsx(kcFormHeaderClass)}>\r\n          {renderHeaderRequiredFields()}\r\n        </header>\r\n        <div id=\"kc-content\">\r\n          <div id=\"kc-content-wrapper\">\r\n            {formNode}\r\n            {auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent && (\r\n            <form\r\n              id=\"kc-select-try-another-way-form\"\r\n              action={url.loginAction}\r\n              method=\"post\"\r\n              className={clsx(displayWide && kcContentWrapperClass)}\r\n            >\r\n              <div className={clsx(displayWide\r\n                && [kcFormSocialAccountContentClass, kcFormSocialAccountClass])}\r\n              >\r\n                <div className={clsx(kcFormGroupClass)}>\r\n                  <input type=\"hidden\" name=\"tryAnotherWay\" value=\"on\" />\r\n                  {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                  <a\r\n                    href=\"#\"\r\n                    id=\"try-another-way\"\r\n                    onClick={() => {\r\n                      document.forms['kc-select-try-another-way-form' as never].submit();\r\n                      return false;\r\n                    }}\r\n                  >\r\n                    {msg('doTryAnotherWay')}\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            )}\r\n            {displayInfo && (\r\n            <div id=\"kc-info\" className={clsx(kcSignUpClass)}>\r\n              <div id=\"kc-info-wrapper\" className={clsx(kcInfoAreaWrapperClass)}>\r\n                {infoNode}\r\n              </div>\r\n            </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport './KcApp.css';\r\nimport { lazy, Suspense } from 'react';\r\nimport Fallback, { defaultKcProps, type KcProps } from 'keycloakify';\r\nimport DefaultTemplate from 'keycloakify/lib/Template';\r\nimport type { KcContext } from './kcContext';\r\nimport { useI18n } from './i18n';\r\nimport Template from './Template';\r\n\r\nconst Login = lazy(() => import('./pages/Login'));\r\n// If you can, favor register-user-profile.ftl over register.ftl, see: https://docs.keycloakify.dev/realtime-input-validation\r\nconst Terms = lazy(() => import('./pages/Terms'));\r\nconst Info = lazy(() => import('keycloakify/lib/pages/Info'));\r\n\r\n// This is like editing the theme.properties\r\n// https://github.com/keycloak/keycloak/blob/11.0.3/themes/src/main/resources/theme/keycloak/login/theme.properties\r\nconst kcProps: KcProps = {\r\n  ...defaultKcProps,\r\n  // NOTE: The classes are defined in ./KcApp.css\r\n  // You can add your classes alongside thoses that are present in the default Keycloak theme...\r\n  kcHtmlClass: [...defaultKcProps.kcHtmlClass, 'my-root-class'],\r\n  // ...or overwrite\r\n  // \"kcHeaderWrapperClass\": \"my-color my-font\"\r\n};\r\n\r\nexport default function App(props: { kcContext: KcContext; }) {\r\n  const { kcContext } = props;\r\n\r\n  const i18n = useI18n({ kcContext });\r\n\r\n  if (i18n === null) {\r\n    return null;\r\n  }\r\n\r\n  const pageProps = { i18n, Template, ...kcProps };\r\n\r\n  return (\r\n    <Suspense>\r\n      {(() => {\r\n        switch (kcContext.pageId) {\r\n          case 'login.ftl': return <Login {...{ kcContext, ...pageProps }} />;\r\n          case 'terms.ftl': return <Terms {...{ kcContext, ...pageProps }} />;\r\n            // We choose to use the default Template for the\r\n            // Info page and to download the theme resources.\r\n          case 'info.ftl': return <Info {...{ kcContext, ...pageProps }} Template={DefaultTemplate} doFetchDefaultThemeResources />;\r\n          default: return <Fallback {...{ kcContext, ...pageProps }} />;\r\n        }\r\n      })()}\r\n    </Suspense>\r\n  );\r\n}\r\n","import { useI18n as useI18nBase } from 'keycloakify';\r\n\r\ntype Props = Omit<Parameters<typeof useI18nBase>[0], 'extraMessages'>;\r\n\r\nexport function useI18n(props: Props) {\r\n  const { kcContext } = props;\r\n  return useI18nBase({\r\n    kcContext,\r\n    extraMessages: {\r\n      en: {\r\n        alphanumericalCharsOnly: 'Only alphanumerical characters',\r\n        gender: 'Gender',\r\n        // Here we overwrite the default english value for the message \"doForgotPassword\"\r\n        // that is \"Forgot Password?\" see: https://github.com/InseeFrLab/keycloakify/blob/f0ae5ea908e0aa42391af323b6d5e2fd371af851/src/lib/i18n/generated_messages/18.0.1/login/en.ts#L17\r\n        doForgotPassword: 'Forgot password?',\r\n        noAccount: 'Already have an account?',\r\n        doRegister: 'Sign up!',\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\nexport type I18n = NonNullable<ReturnType<typeof useI18n>>;\r\n"],"names":["Template","props","displayInfo","displayRequiredFields","displayWide","showAnotherWayIfPresent","headerNode","showUsernameNode","formNode","infoNode","kcContext","i18n","doFetchDefaultThemeResources","stylesCommon","styles","scripts","kcHtmlClass","kcLoginClass","kcFormCardClass","kcFormCardAccountClass","kcFormHeaderClass","kcContentWrapperClass","kcLabelWrapperClass","kcFormGroupClass","kcResetFlowIcon","kcFormSocialAccountContentClass","kcFormSocialAccountClass","kcSignUpClass","kcInfoAreaWrapperClass","msg","auth","url","usePrepareTemplate","isReady","className","clsx","undefined","showUsername","showResetCredentials","id","htmlFor","attemptedUsername","href","loginRestartFlowUrl","showTryAnotherWayLink","action","loginAction","method","type","name","value","onClick","document","forms","submit","Login","lazy","Terms","Info","kcProps","defaultKcProps","App","useI18nBase","extraMessages","en","alphanumericalCharsOnly","gender","doForgotPassword","noAccount","doRegister","useI18n","pageProps","Suspense","pageId","DefaultTemplate"],"sourceRoot":""}